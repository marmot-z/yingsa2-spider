# 定时任务执行时间
cron: 0 0 1-2/1 * * *

# 用户信息
user:
  # 手机号码
  phoneNum: 1xxx
  # 登录密码
  password: xxx

# 需要预约的场地和时间段
interested:
  # 关注的场地(可多个)，取值范围为'S', 'A', '1', '2', '3', '4', '5', '6', '7', '8', '9'
  sites: 
    - 9
    - 8
    - S
  # 预定开始时间，取值区间(0-24]，开始时间要小于结束时间
  startHour: 21
  # 预定结束时间，取值区间(0-24]
  endHour: 22

# 自动预约
# 在预约前先判断当前用户订单中是否有未付款和未使用的订单，如果有则任何策略下都不会自动预约
# 预约成功的订单需要在十分钟进行支付，否则将会失效！！！
# 预约结果(成功/失败)总是会推送到微信公众号（其不受${notify.condition}配置项影响）
# 一次只会预约一个场地，预约场地的优先级从 S -> 9 递减
autoReserve:
  # 自动预约策略，可配置多个策略进行预约
  # no: 不预约
  # first: 预约第一个可预约的场地
  # weekendFirst: 预约第一个可预约的周末场地（无周末场地不进行预约）
  # workdayFirst: 预约第一个可预约的工作日场地（无工作日场地不进行预约）
  # last: 预约最后一个可预约的场地
  # all: 预约所有可预约的场地
  # random: 预约任意一个可预约的场地
  # monday: 周一
  # tuesday: 周二
  # wednesday: 周三
  # thursday: 周四
  # friday: 周五
  # saturday: 周六
  # sunday: 周日
  strategies: 
    - monday
    - wednesday
    - sunday
    - workdayFirst

# 推送信息到微信公众号的配置项
notify:
  # 推送条件，该配置项只针对于场地预约的相关信息，不针对自动预约结果信息的推送
  # always: 总是
  # instock: 可预定
  # never: 从不
  condition: instock
  # 推送应用token
  appToken: AT_xxx
  # 关注者uid
  subscriberUid: UID_xxx